plugins {
    id 'base'
    id "io.qameta.allure" version "2.5"
    id "io.franzbecker.gradle-lombok" version "1.14"
}

ext {
    restAssuredVersion = '3.1.1'
    jaksonCoreVersion = '2.9.6'
}


allure {
    version = "$allureVersion"

    autoconfigure = true
    configuration = 'compile'

    aspectjweaver = true
    aspectjVersion = '1.8.10'

    resultsDir = file("${rootDir}/api-tests/build/allure-results")
    reportDir = file("${rootDir}/api-tests/build/reports/allure-report")

    useJUnit5 {
        version = "${allureVersion}"
    }
    downloadLink = "https://dl.bintray.com/qameta/generic/io/qameta/allure/allure/$allureVersion/allure-${allureVersion}.zip"
}



dependencies {
    compile(
            //Test Framework
            ["io.rest-assured:rest-assured:$restAssuredVersion"],
            ["io.rest-assured:json-path:$restAssuredVersion"],
            ["io.rest-assured:xml-path:$restAssuredVersion"],
            ["io.rest-assured:json-schema-validator:$restAssuredVersion"],
            // Json Libraries
            ['org.json:json:20180813'],
            ["com.fasterxml.jackson.core:jackson-databind:$jaksonCoreVersion"],
            ["com.fasterxml.jackson.core:jackson-core:$jaksonCoreVersion"],
            // Allure
            ["io.qameta.allure:allure-rest-assured:${allureVersion}"],
            // Helper libraries
            ["org.projectlombok:lombok:1.18.2"],
            ["com.github.javafaker:javafaker:0.16"],
    )
    //Logging
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'



}



import io.qameta.allure.gradle.task.AllureReport
task allureAggregatedReport(type: AllureReport) {
    allure.resultsDir
}



// Enabled Native JUnit 5 support for Gradle 4.6+
test {
    //useJUnitPlatform()
    useJUnitPlatform{
        includeTags 'registration-tests', 'catalog-tests'
        excludeTags 'negative'
        includeEngines 'junit-jupiter'
        excludeEngines 'junit-vintage'
    }
    failFast = true
    testLogging {
        showStandardStreams = true
        events 'PASSED', 'FAILED', 'SKIPPED'
    }
    afterSuite { desc, result ->
        if (!desc.parent) {
            println "\nTest result: ${result.resultType}"
            println "Test summary: ${result.testCount} tests, " +
                    "${result.successfulTestCount} succeeded, " +
                    "${result.failedTestCount} failed, " +
                    "${result.skippedTestCount} skipped"
        }
    }
    //System variables and properties
    // ...
    systemProperty 'junit.jupiter.conditions.deactivate', '*'
    systemProperties = [
            'junit.jupiter.extensions.autodetection.enabled': 'true',
            'junit.jupiter.testinstance.lifecycle.default' : 'per_class',
    ]
    // Also you can configure this properties in /src/tests/ersource/junit-platform.properties file
    // ...
}.finalizedBy allureAggregatedReport
//tests.finalizedBy allureAggregatedReport




clean.doFirst {
    delete "${rootDir}/api-tests/allure-results"
    delete "${rootDir}/api-tests/allure-report"
    delete "${rootDir}/api-tests/target"
    delete "${rootDir}/api-tests/build"
    delete "${rootDir}/api-tests/out"

}

